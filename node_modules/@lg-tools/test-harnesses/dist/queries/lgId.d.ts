/**
 * The majority of the code is copied from [dom-testing-library](https://github.com/testing-library/dom-testing-library/blob/bd04cf95a1ed85a2238f7dfc1a77d5d16b4f59dc/src/queries/test-id.ts).
 *
 * [Testing Library](https://testing-library.com/docs/dom-testing-library/api-configuration) provides a way to globally change the testIdAttribute but, unfortunately, it does not suit our needs. We prefer not to modify the testIdAttribute globally as it would impact all tests across the entire repository.
 *
 * As an alternative, we're importing the `buildQueries` function directly from [dom-testing-library](https://github.com/testing-library/dom-testing-library/blob/bd04cf95a1ed85a2238f7dfc1a77d5d16b4f59dc/src/queries/test-id.ts) and assigning our custom testing id, `data-lgid`, to it.
 */
import { AllByBoundAttribute } from '@testing-library/dom';
declare const queryAllByTestId: AllByBoundAttribute;
declare const queryByTestId: import("@testing-library/dom").QueryBy<[id: import("@testing-library/dom").Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined]>, getAllByTestId: import("@testing-library/dom").GetAllBy<[id: import("@testing-library/dom").Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined]>, getByTestId: import("@testing-library/dom").GetBy<[id: import("@testing-library/dom").Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined]>, findAllByTestId: import("@testing-library/dom").FindAllBy<[id: import("@testing-library/dom").Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined]>, findByTestId: import("@testing-library/dom").FindBy<[id: import("@testing-library/dom").Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined]>;
export { findAllByTestId, findByTestId, getAllByTestId, getByTestId, queryAllByTestId, queryByTestId, };
//# sourceMappingURL=lgId.d.ts.map