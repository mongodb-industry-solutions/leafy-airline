{"version":3,"file":"index.js","sources":["../../src/testUtils/renderAsyncTest.tsx","../../src/queries/lgId.ts","../../src/utils/checkContainerType/index.ts","../../src/utils/getQueries/index.ts","../../src/utils/getDocument/index.ts","../../src/utils/queryBySelector/index.ts","../../src/utils/index.ts"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface RenderAsyncTestReturnType {\n  openButton: HTMLButtonElement;\n  asyncTestComponentId: string;\n  [key: string]: any;\n}\n\n/**\n * An example of a modal-like component that opens after a delay.\n * This component can be utilized within a test suite to locate an element nested within another element that becomes visible after a delay.\n */\nexport const renderAsyncTest = (\n  element: React.ReactNode,\n  render: any,\n): RenderAsyncTestReturnType => {\n  const asyncTestComponentId = 'async-test-component';\n\n  const AsyncTestWrapper = () => {\n    const [open, setOpen] = useState(false);\n\n    const handleClick = () => {\n      if (open) {\n        setOpen(false);\n        return;\n      }\n\n      setTimeout(() => {\n        setOpen(true);\n      }, 500);\n    };\n\n    return (\n      <>\n        <button\n          data-testid=\"test-component-button\"\n          onClick={handleClick}\n        ></button>\n        {open && (\n          <div data-testid={asyncTestComponentId}>\n            <>\n              <p>Inside Modal</p>\n              {element}\n            </>\n          </div>\n        )}\n      </>\n    );\n  };\n\n  const renderUtils = render(<AsyncTestWrapper />);\n  const openButton = renderUtils.getByTestId('test-component-button');\n\n  return {\n    ...renderUtils,\n    openButton,\n    asyncTestComponentId,\n  };\n};\n","/**\n * The majority of the code is copied from [dom-testing-library](https://github.com/testing-library/dom-testing-library/blob/bd04cf95a1ed85a2238f7dfc1a77d5d16b4f59dc/src/queries/test-id.ts).\n *\n * [Testing Library](https://testing-library.com/docs/dom-testing-library/api-configuration) provides a way to globally change the testIdAttribute but, unfortunately, it does not suit our needs. We prefer not to modify the testIdAttribute globally as it would impact all tests across the entire repository.\n *\n * As an alternative, we're importing the `buildQueries` function directly from [dom-testing-library](https://github.com/testing-library/dom-testing-library/blob/bd04cf95a1ed85a2238f7dfc1a77d5d16b4f59dc/src/queries/test-id.ts) and assigning our custom testing id, `data-lgid`, to it.\n */\n\nimport {\n  AllByBoundAttribute,\n  buildQueries,\n  GetErrorFunction,\n  queryAllByAttribute,\n} from '@testing-library/dom';\n\nimport { checkContainerType } from '../utils/checkContainerType';\n\nconst testIdAttribute = 'data-lgid';\n\nconst queryAllByTestId: AllByBoundAttribute = (...args) => {\n  checkContainerType(args[0]);\n  return queryAllByAttribute(testIdAttribute, ...args);\n};\n\nconst getMultipleError: GetErrorFunction<[unknown]> = (c, id) =>\n  `Found multiple elements by: [${testIdAttribute}=\"${id}\"]`;\nconst getMissingError: GetErrorFunction<[unknown]> = (c, id) =>\n  `Unable to find an element by: [${testIdAttribute}=\"${id}\"]`;\n\nconst [\n  queryByTestId,\n  getAllByTestId,\n  getByTestId,\n  findAllByTestId,\n  findByTestId,\n] = buildQueries(queryAllByTestId, getMultipleError, getMissingError);\n\nexport {\n  findAllByTestId,\n  findByTestId,\n  getAllByTestId,\n  getByTestId,\n  queryAllByTestId,\n  queryByTestId,\n};\n","/**\n * Copied from [dom-testing-library](https://github.com/testing-library/dom-testing-library/blob/bd04cf95a1ed85a2238f7dfc1a77d5d16b4f59dc/src/helpers.ts#L65) since this function is not exported.\n * @param container\n */\n\nexport function checkContainerType(container: unknown) {\n  if (\n    !container ||\n    !(typeof (container as any).querySelector === 'function') ||\n    !(typeof (container as any).querySelectorAll === 'function')\n  ) {\n    throw new TypeError(\n      `Expected container to be an Element, a Document or a DocumentFragment but got ${getTypeName(\n        container,\n      )}.`,\n    );\n  }\n\n  function getTypeName(object: unknown) {\n    if (typeof object === 'object') {\n      return object === null ? 'null' : object.constructor.name;\n    }\n\n    return typeof object;\n  }\n}\n","import { getQueriesForElement } from '@testing-library/dom';\n\nimport * as defaultQueries from '../../queries';\nimport { getDocument } from '../getDocument';\n\nfunction getBaseQueries() {\n  const baseElement = getDocument();\n\n  if (!baseElement) {\n    return {\n      findByLgId: undefined,\n      getByLgId: undefined,\n      queryByLgId: undefined,\n    };\n  }\n\n  // Following [react-testing-library](https://github.com/testing-library/react-testing-library/blob/edb6344d578a8c224daf0cd6e2984f36cc6e8d86/src/pure.js#L195)\n  const {\n    findByTestId: findByLgId,\n    getByTestId: getByLgId,\n    queryByTestId: queryByLgId,\n  } = getQueriesForElement(\n    baseElement.body,\n    // @ts-expect-error: `getQueriesForElement` is expecting all the queries outlined in this [file](https://github.com/testing-library/dom-testing-library/blob/main/types/get-queries-for-element.d.ts) but we're only passing in testid queries.\n    defaultQueries,\n  );\n\n  return {\n    findByLgId,\n    getByLgId,\n    queryByLgId,\n  } as const;\n}\n\nconst lgQueries = getBaseQueries();\nexport { lgQueries };\n","/**\n * Copied from [dom-testing-library](https://github.com/testing-library/dom-testing-library/blob/main/src/helpers.ts#L21) since this function is not exported.\n * @returns Document\n */\n\nexport function getDocument() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  return window.document;\n}\n","/**\n * @param element HTML element\n * @param query string\n * @returns `Element` | `null`\n */\nexport const queryBySelector = <T extends Element>(\n  element: HTMLElement,\n  query: string,\n): T | null => {\n  return element.querySelector(query);\n};\n","import { lgQueries } from './getQueries';\nconst { findByLgId, getByLgId } = lgQueries;\nexport { findByLgId, getByLgId };\nexport { queryBySelector } from './queryBySelector';\n"],"names":["renderAsyncTest","element","render","asyncTestComponentId","AsyncTestWrapper","_useState2","_slicedToArray","useState","open","setOpen","React","createElement","Fragment","onClick","setTimeout","renderUtils","openButton","getByTestId","_objectSpread","testIdAttribute","queryAllByTestId","_len","arguments","length","args","Array","_key","container","querySelector","querySelectorAll","TypeError","concat","object","_typeof","constructor","name","checkContainerType","queryAllByAttribute","apply","_buildQueries2","buildQueries","c","id","queryByTestId","getAllByTestId","findAllByTestId","findByTestId","lgQueries","baseElement","window","document","getDocument","findByLgId","undefined","getByLgId","queryByLgId","_getQueriesForElement","getQueriesForElement","body","defaultQueries","getBaseQueries","queryBySelector","query"],"mappings":"+4EAOU,IAACA,EAAkB,SAAyBC,EAASC,GAC7D,IAAIC,EAAuB,uBACvBC,EAAmB,WACrB,IACEC,EAAaC,EADCC,GAAS,GACgB,GACvCC,EAAOH,EAAW,GAClBI,EAAUJ,EAAW,GAUvB,OAAoBK,EAAMC,cAAcD,EAAME,SAAU,KAAmBF,EAAMC,cAAc,SAAU,CACvG,cAAe,wBACfE,QAXgB,WACZL,EACFC,GAAQ,GAGVK,YAAW,WACTL,GAAQ,EACT,GAAE,IACT,IAIQD,GAAqBE,EAAMC,cAAc,MAAO,CAClD,cAAeR,GACDO,EAAMC,cAAcD,EAAME,SAAU,KAAmBF,EAAMC,cAAc,IAAK,KAAM,gBAAiBV,IAC3H,EACMc,EAAcb,EAAqBQ,EAAMC,cAAcP,EAAkB,OACzEY,EAAaD,EAAYE,YAAY,yBACzC,OAAOC,EAAcA,EAAc,CAAE,EAAEH,GAAc,CAAA,EAAI,CACvDC,WAAYA,EACZb,qBAAsBA,GAE1B,ECzBA,IAAIgB,EAAkB,YAClBC,EAAmB,WACrB,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAGzB,OCXK,SAA4BC,GACjC,IAAKA,GAAkD,mBAA5BA,EAAUC,eAAyE,mBAA/BD,EAAUE,iBACvF,MAAM,IAAIC,UAAU,iFAAiFC,QAElFC,EAFqGL,EAGhG,WAApBM,EAAQD,GACQ,OAAXA,EAAkB,OAASA,EAAOE,YAAYC,KAEhDF,EAAQD,IANqH,MAEtI,IAAqBA,CAMvB,CDAEI,CAAmBZ,EAAK,IACjBa,EAAoBC,WAAM,EAAQ,CAACnB,GAAiBY,OAAOP,GACpE,EAQEe,EAAiBjC,EADCkC,EAAapB,GANV,SAA0BqB,EAAGC,GAClD,MAAO,gCAAgCX,OAAOZ,EAAiB,MAAOY,OAAOW,EAAI,KACnF,IACsB,SAAyBD,EAAGC,GAChD,MAAO,kCAAkCX,OAAOZ,EAAiB,MAAOY,OAAOW,EAAI,KACrF,IAEiD,GAC/CC,EAAgBJ,EAAe,GAC/BK,EAAiBL,EAAe,GAChCtB,EAAcsB,EAAe,GAC7BM,EAAkBN,EAAe,GACjCO,EAAeP,EAAe,wIELhC,IAAIQ,EAvBJ,WACE,IAAIC,ECCC,WACL,GAAsB,oBAAXC,OAGX,OAAOA,OAAOC,QAChB,CDNoBC,GAClB,IAAKH,EACH,MAAO,CACLI,gBAAYC,EACZC,eAAWD,EACXE,iBAAaF,GAKjB,IAAIG,EAAwBC,EAAqBT,EAAYU,KAE3DC,GAIF,MAAO,CACLP,WAJaI,EAAsBV,aAKnCQ,UAJYE,EAAsBvC,YAKlCsC,YAJcC,EAAsBb,cAMxC,CACgBiB,GErBLC,EAAkB,SAAyB5D,EAAS6D,GAC7D,OAAO7D,EAAQ2B,cAAckC,EAC/B,ECNIV,EAAaL,EAAUK,WACzBE,EAAYP,EAAUO"}