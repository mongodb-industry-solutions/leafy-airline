import { HTMLElementProps } from '@leafygreen-ui/lib';
declare const SupportedColors: {
    readonly White: "white";
    readonly Black: "black";
    readonly GreenDark2: "green-dark-2";
    readonly GreenBase: "green-base";
};
type SupportedColors = (typeof SupportedColors)[keyof typeof SupportedColors];
declare const SupportedColorsMap: Record<SupportedColors, string>;
type SupportedColorsMap = (typeof SupportedColorsMap)[keyof typeof SupportedColorsMap];
export { SupportedColors, SupportedColorsMap };
export interface BaseLogoProps extends HTMLElementProps<'svg'> {
    /**
     * Determines Color of the Logo or LogoMark component.
     *
     * @default 'green-dark-2'
     */
    color?: SupportedColors;
    /**
     * Determines height of the Logo or LogoMark component.
     *
     * @default 40
     */
    height?: number;
}
export type ProductLogoProps = HTMLElementProps<'svg', never> & {
    knockout?: boolean;
    size?: number;
    darkMode?: boolean;
    height?: number;
};
export declare const LogoNames: readonly ["MongoDBLogoMark", "MongoDBLogo", "AtlasNavGraphic", "AtlasLogoLockup", "AtlasForGovernmentLogoLockup", "EnterpriseAdvancedLogoLockup", "CommunityEditionLogoLockup", "UniversityLogoLockup"];
export type LogoName = (typeof LogoNames)[number];
export interface LogoProps extends BaseLogoProps {
    /**
     * The name of the logo to render
     * @required
     */
    name: LogoName;
}
//# sourceMappingURL=Logo.types.d.ts.map