/// <reference types="node" />
import emotion from './emotion';
export declare const flush: () => void, hydrate: (ids: string[]) => void, cx: (...classNames: import("@emotion/css/types/create-instance").ClassNamesArg[]) => string, merge: (className: string) => string, getRegisteredStyles: (registeredStyles: string[], className: string) => string, injectGlobal: {
    (template: TemplateStringsArray, ...args: import("@emotion/serialize").CSSInterpolation[]): void;
    (...args: import("@emotion/serialize").CSSInterpolation[]): void;
}, keyframes: {
    (template: TemplateStringsArray, ...args: import("@emotion/serialize").CSSInterpolation[]): string;
    (...args: import("@emotion/serialize").CSSInterpolation[]): string;
}, css: {
    (template: TemplateStringsArray, ...args: import("@emotion/serialize").CSSInterpolation[]): string;
    (...args: import("@emotion/serialize").CSSInterpolation[]): string;
}, sheet: import("@emotion/css/types/create-instance").CSSStyleSheet, cache: import("@emotion/utils").EmotionCache;
export declare const extractCritical: (html: string) => import("@emotion/server/create-instance").EmotionCritical, renderStylesToString: (html: string) => string, renderStylesToNodeStream: () => NodeJS.ReadWriteStream;
export default emotion;
//# sourceMappingURL=index.d.ts.map